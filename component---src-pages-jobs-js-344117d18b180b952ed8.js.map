{"version":3,"sources":["webpack:///./src/components/sections/JobsList.js","webpack:///./src/pages/jobs.js"],"names":["JOBS","name","image","link","JobsGrid","styled","div","withConfig","displayName","componentId","props","theme","screen","lg","md","xs","Title","p","color","black","regular","StyledExternalLink","font_size","small","light","ExternalLink","JobsList","react_default","a","createElement","gatsby_browser_entry","query","render","data","global","id","style","position","map","_ref","img","allFile","edges","find","_ref2","node","relativePath","href","gatsby_image_default","fluid","childImageSharp","alt","_2070693193","Jobs","Layout","Navbar","Header","sections_JobsList","Footer"],"mappings":"qPAQMA,EAAO,CACT,CACEC,KAAM,uDACNC,MAAO,gBACPC,KAAM,0CAER,CACEF,KAAM,2CACNC,MAAO,gBACPC,KAAM,0CAER,CACEF,KAAM,6CACNC,MAAO,gBACPC,KAAM,0CAER,CACEF,KAAM,mDACNC,MAAO,gBACPC,KAAM,0CAER,CACEF,KAAM,kDACNC,MAAO,gBACPC,KAAM,0CAER,CACEF,KAAM,mDACNC,MAAO,gBACPC,KAAM,0CAER,CACEF,KAAM,gEACNC,MAAO,gBACPC,KAAM,2CAmDJC,EAAWC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAGJ,CAAH,4UAQS,SAAAK,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,IAI5B,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,IAK5B,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOG,KAK7CC,EAAQX,IAAOY,EAAVV,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,+BAEA,SAAAK,GAAK,OAAIA,EAAMC,MAAMO,MAAMC,MAAMC,UAQtCC,GALWhB,IAAOY,EAAVV,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAGJ,CAAH,mBACV,SAAAK,GAAK,OAAIA,EAAMC,MAAMW,UAAUC,OACxB,SAAAb,GAAK,OAAIA,EAAMC,MAAMO,MAAMC,MAAMK,QAGjBnB,YAAOoB,KAAVlB,WAAA,CAAAC,YAAA,+BAAAC,YAAA,gBAAGJ,CAAH,oGAQX,SAAAK,GAAK,OAAIA,EAAMC,MAAMO,MAAMC,MAAMC,WAI/BM,EA3FA,kBACbC,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAK,aAgBLC,OAAQ,SAAAC,GAAI,OACVN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASC,GAAG,QACVR,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAWE,MAAO,CAAEC,SAAU,aAC5BV,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAACzB,EAAD,KACGJ,EAAKsC,IAAI,SAAAC,GAA2B,IAAxBtC,EAAwBsC,EAAxBtC,KAAMC,EAAkBqC,EAAlBrC,MAAOC,EAAWoC,EAAXpC,KAClBqC,EAAMP,EAAKQ,QAAQC,MAAMC,KAC7B,SAAAC,GAAA,OAAAA,EAAGC,KAAgBC,eAAiB5C,IACpC2C,KAEF,OACElB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACR,EAAD,CAAoB0B,KAAM5C,GACxBwB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CACEqB,MAAOT,EAAIU,gBAAgBD,MAC3BE,IAAKlD,IAEP0B,EAAAC,EAAAC,cAACb,EAAD,KAAQf,WAlC1BgC,KAAAmB,KC7BWC,UATF,kBACX1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACE3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,MACA5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,MACA7B,EAAAC,EAAAC,cAAC4B,EAAD,MACA9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD","file":"component---src-pages-jobs-js-344117d18b180b952ed8.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nimport { Section, Container } from '@components/global';\nimport ExternalLink from '@common/ExternalLink';\n\nconst JOBS = [\n    {\n      name: 'Core Systems Integration Developer (Remote/Anywhere)',\n      image: 'collabora.png',\n      link: 'https://www.collabora.com/careers.html',\n    },\n    {\n      name: 'Linux Kernel Developer (Remote/Anywhere)',\n      image: 'collabora.png',\n      link: 'https://www.collabora.com/careers.html',\n    },\n    {\n      name: 'Linux Graphics Developer (Remote/Anywhere)',\n      image: 'collabora.png',\n      link: 'https://www.collabora.com/careers.html',\n    },\n    {\n      name: 'Open Source Software Developer (Remote/Anywhere)',\n      image: 'collabora.png',\n      link: 'https://www.collabora.com/careers.html',\n    },\n    {\n      name: 'Multimedia Software Developer (Remote/Anywhere)',\n      image: 'collabora.png',\n      link: 'https://www.collabora.com/careers.html',\n    },\n    {\n      name: 'Systems Administration Manager (Remote/Anywhere)',\n      image: 'collabora.png',\n      link: 'https://www.collabora.com/careers.html',\n    },\n    {\n      name: 'Software Developer - Tools & Infrastructure (Remote/Anywhere)',\n      image: 'collabora.png',\n      link: 'https://www.collabora.com/careers.html',\n    },\n]\n\nconst JobsList = () => (\n    <StaticQuery\n      query={graphql`\n        query {\n          allFile(filter: { sourceInstanceName: { eq: \"logos\" } }) {\n            edges {\n              node {\n                relativePath\n                childImageSharp {\n                  fluid(maxWidth: 100) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <Section id=\"jobs\">\n          <Container style={{ position: 'relative' }}>\n            <h1>Open Positions at our Sponsors</h1>\n            <JobsGrid>\n              {JOBS.map(({ name, image, link }) => {\n                const img = data.allFile.edges.find(\n                  ({ node }) => node.relativePath === image\n                ).node;\n  \n                return (\n                  <div>\n                    <StyledExternalLink href={link}>\n                      <Img\n                        fluid={img.childImageSharp.fluid}\n                        alt={name}\n                      />\n                      <Title>{name}</Title>\n                    </StyledExternalLink>\n                  </div>\n                );\n              })}\n            </JobsGrid>\n          </Container>\n        </Section>\n      )}\n    />\n  );\n  \n  const JobsGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 200px);\n    grid-template-rows: min-content;\n    grid-gap: 50px;\n    justify-content: space-between;\n    margin-top: 72px;\n  \n    @media (max-width: ${props => props.theme.screen.lg}) {\n      justify-content: start;\n    }\n  \n    @media (max-width: ${props => props.theme.screen.md}) {\n      width: 100%;\n      grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n    }\n  \n    @media (max-width: ${props => props.theme.screen.xs}) {\n      grid-gap: 24px;\n    }\n  `;\n  \n  const Title = styled.p`\n    margin-top: 16px;\n    color: ${props => props.theme.color.black.regular};\n  `;\n  \n  const Subtitle = styled.p`\n    ${props => props.theme.font_size.small};\n    color: ${props => props.theme.color.black.light};\n  `;\n  \n  const StyledExternalLink = styled(ExternalLink)`\n    color: inherit;\n    text-decoration: none;\n    font-size: 2em;\n    margin-top: 1em;\n    float: right;\n  \n    &:hover {\n      color: ${props => props.theme.color.black.regular};\n    }\n  `;\n  \n  export default JobsList;","import React from 'react';\n\nimport Layout from '@common/Layout';\nimport Navbar from '@common/Navbar';\n\nimport Header from '@sections/Header';\nimport Footer from '@sections/Footer';\nimport JobsList from '@sections/JobsList';\n\nconst Jobs = () => (\n  <Layout>\n    <Navbar />\n    <Header />\n    <JobsList />\n    <Footer />\n  </Layout>\n);\n\nexport default Jobs;\n"],"sourceRoot":""}