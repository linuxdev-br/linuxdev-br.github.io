{"version":3,"sources":["webpack:///./src/templates/blogPost.js"],"names":["query","PostBody","styled","div","withConfig","displayName","componentId","Subtitle","p","props","theme","font_size","small","color","black","light","Template","_props$data$markdownR","data","markdownRemark","frontmatter","html","_props$pageContext","pageContext","prev","next","console","log","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_common_Layout__WEBPACK_IMPORTED_MODULE_3__","_common_Navbar__WEBPACK_IMPORTED_MODULE_4__","_sections_Header__WEBPACK_IMPORTED_MODULE_6__","_components_global__WEBPACK_IMPORTED_MODULE_8__","date","title","dangerouslySetInnerHTML","__html","style","display","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","path","rel","_sections_Footer__WEBPACK_IMPORTED_MODULE_7__"],"mappings":"gOAwDaA,EAAK,YAYZC,EAAWC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,qBAAAC,YAAA,YAAGJ,CAAH,wBAMRK,EAAWL,IAAOM,EAAVJ,WAAA,CAAAC,YAAA,qBAAAC,YAAA,YAAGJ,CAAH,gCAEV,SAAAO,GAAK,OAAIA,EAAMC,MAAMC,UAAUC,OACxB,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,MAAMC,MAAMC,QAG7BC,UArEE,SAAAP,GAAS,IAAAQ,EACMR,EAAMS,KAAKC,eAAjCC,EADgBH,EAChBG,YAAaC,EADGJ,EACHI,KADGC,EAEDb,EAAMc,YAArBC,EAFgBF,EAEhBE,KAAMC,EAFUH,EAEVG,KAGd,OAFAC,QAAQC,IAAIlB,EAAMc,aAGhBK,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,MACAJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,MACAL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACvB,EAAD,KAAWa,EAAYe,MACvBP,EAAAC,EAAAC,cAAA,UAAKV,EAAYgB,OACjBR,EAAAC,EAAAC,cAAC7B,EAAD,CAAUoC,wBAAyB,CAAEC,OAAQjB,KAC7CO,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLC,QAAO,OACPC,SAAQ,OACRC,eAAc,gBACdC,UAAS,OACTC,QAAS,IAGXhB,EAAAC,EAAAC,cAAA,UACGN,GACCI,EAAAC,EAAAC,cAACe,EAAA,KAAD,CAAMC,GAAItB,EAAKJ,YAAY2B,KAAMC,IAAI,QAArC,KACKxB,EAAKJ,YAAYgB,QAI1BR,EAAAC,EAAAC,cAAA,UACGL,GACCG,EAAAC,EAAAC,cAACe,EAAA,KAAD,CAAMC,GAAIrB,EAAKL,YAAY2B,KAAMC,IAAI,QAClCvB,EAAKL,YAAYgB,MADpB,UAQVR,EAAAC,EAAAC,cAACmB,EAAA,EAAD","file":"component---src-templates-blog-post-js-660bb3fa39faeb0c02bd.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\n\nimport Layout from '@common/Layout';\nimport Navbar from '@common/Navbar';\nimport styled from 'styled-components';\n\nimport Header from '@sections/Header';\nimport Footer from '@sections/Footer';\nimport { Section, Container } from '@components/global';\n\nconst Template = props => {\n  const { frontmatter, html } = props.data.markdownRemark;\n  const { prev, next } = props.pageContext;\n  console.log(props.pageContext);\n\n  return (\n    <Layout>\n      <Navbar />\n      <Header />\n      <Container>\n        <Section>\n          <Subtitle>{frontmatter.date}</Subtitle>\n          <h1>{frontmatter.title}</h1>\n          <PostBody dangerouslySetInnerHTML={{ __html: html }} />\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {prev && (\n                <Link to={prev.frontmatter.path} rel=\"prev\">\n                  ← {prev.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.frontmatter.path} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </Section>\n      </Container>\n      <Footer />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query($pathSlug: String!) {\n    markdownRemark(frontmatter: { path: { eq: $pathSlug } }) {\n      html\n      frontmatter {\n        title\n        date\n      }\n    }\n  }\n`;\n\nconst PostBody = styled.div`\n  p {\n    margin: 1.5em 0;\n  }\n`;\n\nconst Subtitle = styled.p`\n  margin: 1em 0;\n  ${props => props.theme.font_size.small};\n  color: ${props => props.theme.color.black.light};\n`;\n\nexport default Template;\n"],"sourceRoot":""}